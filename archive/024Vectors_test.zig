const expect = @import("std").testing.expect;
//Последняя тема!)
//Дальше только стандартная библиотека и сборка проектов.
//Ну чтож. Я не буду придумывать свой код я буду брать из гайда и менять его
//Я хочу закончить с синтаксисом сегодня

const meta = @import("std").meta;
//Без этого импорта вектор не заработает

test "Vectors" {
    const r: @Vector(3, f64) = .{ 10, 15, 20 };

    try expect(@TypeOf(r) == @Vector(3, f64));
}

test "Теперь попробуем сложить вектора " {
    //Прелесть вектора в том, что если их сложить, они поэлементно сложатся

    const r1 = @Vector(5, f64){ 1, 5, 10, 15, 20 };
    var r0 = @Vector(5, f64){ 0, 0, 0, 0, 0 };
    //Другой способ объявить вектор
    //Так как функция @Vector возвращает тип - то тип присваевается tuple справа

    r0 += r1;
    //Уря!)

    try expect(r0[0] == 1);

    //Сделаем проверку круче
    for (0..4) |i| try expect(r1[i] == r0[i]);
}
//В гайде есть код с блоком. Но как по мне - он избыточен
